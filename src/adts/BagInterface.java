package adts;/** * LISTING 1-1 An interface that describes the operations of a bag of objects. * * @param <T> */public interface BagInterface<T> {    public int getSize();    public boolean isFull();    public boolean isEmpty();    public boolean add(T newEntry);    public T remove();    public boolean remove(T anEntry);    public void clear();    public int getFrequencyOf(T anEntry);    public boolean contains(T anEntry);    public T[] toArray();//    Not supported for LinkedBags//    public int getIndexOf(T anEntry);//    public T remove(int index);        /**     * Creates a new bag that combines the contents of this bag and anotherBag.     *     * @param anotherBag the bag that is to be added     * @return a combined bag     *///	public BagInterface union(BagInterface anotherBag);    /**     * Creates a new bag that contains those objects that occur in both this bag     * and anotherBag.     *     * @param anotherBag the bag that is to be compared     * @return a combined bag     *///	public BagInterface intersection(BagInterface anotherBag);    /**     * Creates a new bag of objects that would be left in this bag after     * removing those that also occur in anotherBag.     *     * @param anotherBag the bag that is to be removed     * @return a combined bag     *///	public BagInterface difference(BagInterface anotherBag);} // end BagInterface